name: Build and Publish

on:
  push:
    branches:
      - master
    paths:
      - "package.json"
  pull_request:
    branches:
      - master
    paths:
      - "package.json"
  workflow_dispatch:
    inputs:
      skip_version_check:
        description: "Skip version check and force build & publish"
        required: false
        default: "false"
        type: choice
        options:
          - "true"
          - "false"

permissions:
  id-token: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-version:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.diff.outputs.version_changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Compare package.json version
        id: diff
        run: |
          # Skip version check if manually triggered with skip_version_check=true
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.skip_version_check }}" = "true" ]; then
            echo "Skipping version check (manual trigger with skip_version_check=true)"
            echo "version_changed=true" >> $GITHUB_OUTPUT
            exit 0
          fi

          PREV=$(git show HEAD~1:package.json 2>/dev/null \
              | grep -oP '"version": "\K[^"]+')
          CURR=$(grep -oP '"version": "\K[^"]+' package.json)

          echo "prev=$PREV  curr=$CURR"
          if [ -z "$PREV" ] || [ "$PREV" != "$CURR" ]; then
              echo "version_changed=true" >> $GITHUB_OUTPUT
          else
              echo "version_changed=false" >> $GITHUB_OUTPUT
          fi

  build:
    needs: check-version
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Boilerplate
        uses: actions/checkout@v4
        with:
          repository: koishijs/boilerplate

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: external/currency-converter

      - name: Setup Node.js
        uses: actions/setup-node@v4

      - name: Enable Corepack
        run: corepack enable

      - name: Install Dependencies
        run: |
          cd .
          yarn --no-immutable

      - name: Build Package
        run: |
          cd .
          yarn build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            external/currency-converter/lib
            external/currency-converter/package.json
            external/currency-converter/readme.md

  publish:
    needs: [check-version, build]
    runs-on: ubuntu-latest
    if: needs.check-version.outputs.version_changed == 'true'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: external/currency-converter

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: "https://registry.npmjs.org"

      - name: Update npm
        run: npm install -g npm@latest

      - name: Publish to npm
        run: |
          cd external/currency-converter
          npm publish --access public
